syntax = "proto3";

package protobuf;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// EnumerateServicesResponse contains all known service IDs
message EnumerateServicesResponse {
    repeated string service_id = 1;
}

// EnumeratePlatformsResponse contains all known platform IDs
message EnumeratePlatformsResponse {
    repeated string platform_id = 1;
}

// GetServiceStateRequest requests the state of a service
message GetServiceStateRequest {
    string service_id = 1;
}

// GetServiceStateResponse lists state on all known platforms
message GetServiceStateResponse {
    repeated ServiceState service_state = 1;
}

// SetServiceStateRequest initiates a change in the state of a service
message SetServiceStateRequest {
    string service_id = 1;
    repeated ServiceState service_state = 2;
}

// SetServiceStateResponse returns a unique request ID for tracking the
// requested change in the state of a service
message SetServiceStateResponse {
    string request_id = 1;
}

// PollStateChangeRequest requests the status of a SetServiceStateRequest
message PollStateChangeRequest {
    string request_id = 1;
}

// PollStateChangeResponse reports the status of a SetServiceStateRequest 
message PollStateChangeResponse {
    bool is_completed = 1;
    bool is_successful = 2;
    string message = 3;
}

// ServiceState is the information about a deployment on an individual platform
message ServiceState {
    string platform_id = 1;
    uint32 instance_count = 2;
    // resources here
}

// Interface exported by the server.
service Scaler {

    // EnumerateServices lists all known service IDs
    rpc EnumerateServices(
        google.protobuf.Empty
    ) returns (EnumerateServicesResponse) {
 
        // REST method
        option (google.api.http) = {
            get: "/services/scaler/services"
       };       
    }

    // EnumeratePlatforms lists all known platform IDs
    rpc EnumeratePlatforms(
        google.protobuf.Empty
    ) returns (EnumeratePlatformsResponse) {
 
        // REST method
        option (google.api.http) = {
            get: "/services/scaler/services/platforms"
       };       
    }

    // GetServiceState lists the state of the service on all platforms
    rpc GetServiceState(
        GetServiceStateRequest
    ) returns (GetServiceStateResponse) {

        // REST method
        option (google.api.http) = {
            get: "/services/scaler/services/{service_id}"
        };
    }

    // SetServiceState initiates a request to change the state of a service
    // Returns a unique request_id for tracking the status of the request
    rpc SetServiceState(
        SetServiceStateRequest
    ) returns (SetServiceStateResponse) {
        
        // REST method
        option (google.api.http) = {
            put: "/services/scaler/services/{service_id}"
            body: "*"
        };
    }

    // PollStateChange checks the status of a SetServiceState request
    rpc PollStateChange(
        PollStateChangeRequest
    ) returns (PollStateChangeResponse) {

        // REST method
        option (google.api.http) = {
            get: "/services/scaler/services/requests/{request_id}"
        };
    }

}

